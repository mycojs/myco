name = "Async JavaScript Runtime"
description = "Test async/await, Promises, and asynchronous operations"

[[tests]]
name = "basic async await"
script = "basic_async.ts"
expected_stdout = """\
Starting async test
Delayed greeting: Hello, Alice!
Before first await
First result: Hello, Bob!
Before second await
Second result: Hello, Charlie!
Immediate value: 42
Promise.resolve: Already resolved
Async test completed
"""
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 10000

[[tests]]
name = "promise chaining"
script = "promise_chaining.ts"
expected_stdout = """\
Starting promise chaining test
Testing promise chaining
First then: initial
Second then: second
Third then: final
Testing Promise.all
Promise.all results: A,B,C
Testing Promise.race
Promise.race winner: fast
Testing nested async
Processed data: validated-processed-input
Testing concurrent operations
Concurrent results: concurrent1 concurrent2 concurrent3
Elapsed time < 200ms: true
Promise chaining test completed
"""
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 10000

[[tests]]
name = "async error handling"
script = "async_errors.ts"
expected_stdout = """\
Starting async error handling test
Testing basic async error handling
Caught async error: Async error
Testing Promise.reject
Caught Promise.reject: Immediate rejection
Testing async function that throws
Caught function error: Function threw error
Testing Promise.all with rejection
Caught Promise.all error: Promise.all error
Testing Promise.race with rejection
Caught Promise.race error: Fast rejection
Testing nested async errors
Inner catch: Function threw error
Outer catch: Outer error
Testing error in promise chain
Chain step 1: initial
Caught chain error: Chain error
Testing finally block
Caught finally test error: Finally test error
Finally block executed
Async error handling test completed
"""
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 10000

[[tests]]
name = "timeout behavior"
script = "timeout_behavior.ts"
expected_stdout = """\
Starting timeout behavior test
Setting timeout
Timeout set, continuing
Timeout executed
Testing multiple timeouts
Timeout 1 (100ms)
Timeout 2 (200ms)
Timeout 3 (300ms)
All timeouts completed
Testing nested timeouts
Outer timeout start
Outer timeout end
Inner timeout executed
Testing zero delay timeout
Before zero timeout
After zero timeout set
Zero delay timeout executed
Testing timeout vs immediate
Order test result: sync1,sync2,timeout
Testing async function timing
Async function start
Async function timeout
Async function end
Got result: async result
Timeout behavior test completed
"""
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 15000

[[tests]]
name = "clear timeout"
script = "clear_timeout_test.ts"
expected_stdout = """\
Testing clearTimeout functionality
Timer set with ID: 1
Timer cleared
clearTimeout test completed
SUCCESS: First timer was properly cancelled
"""
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000 