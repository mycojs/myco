name = "Basic JavaScript Runtime"
description = "Test basic JavaScript language features"

[[tests]]
name = "hello world"
script = "hello_world.ts"
expected_stdout = "Hello, World!\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "variable declarations"
script = "variables.ts"
expected_stdout = "Number: 42\nString: Hello\nBoolean: true\nSum: 50\nGreeting: Hello, World!\nNegation: false\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "functions and closures"
script = "functions.ts"
expected_stdout = "add(5, 3): 8\nmultiply(4, 7): 28\ncounter(): 1\ncounter(): 2\ncounter(): 3\napplyTwice(double, 3): 12\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "objects and arrays"
script = "objects_arrays.ts"
expected_stdout = "numbers[0]: 1\nnames.length: 3\nnumbers after push: 1,2,3,4,5,6\ndoubled: 2,4,6,8,10,12\nsum: 21\nperson.name: John\nperson['age']: 30\nupdated age: 31\nnew country: USA\nkeys: name,age,city,country\nfirst user: Alice\nuser count: 2\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "control flow"
script = "control_flow.ts"
expected_stdout = "Adult\nGrade: B\nFor loop:\n  Iteration: 1\n  Iteration: 2\n  Iteration: 3\nFor...of loop:\n  Fruit: apple\n  Fruit: banana\n  Fruit: orange\nFor...in loop:\n  a: 1\n  b: 2\n  c: 3\nWhile loop:\n  Count: 0\n  Count: 1\n  Count: 2\nStart of work week\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "error handling"
script = "error_handling.ts"
expected_stdout = "Before error\nCaught error: Test error\nIn try block\nIn catch block: Another error\nIn finally block\nCaught TypeError: TypeError\nCaught ReferenceError: ReferenceError\nFunction threw: Function error\nInner catch: Inner error\nOuter catch: Outer error\nNo error thrown\nEnd of function\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "string operations"
script = "string_operations.ts"
expected_stdout = "Combined: Hello World\nLength: 11\ntoUpperCase: JAVASCRIPT IS AWESOME\ntoLowerCase: javascript is awesome\nindexOf 'is': 11\nsubstring(0, 10): JavaScript\nslice(-7): awesome\nsplit words: JavaScript,is,awesome\nincludes 'fox': true\nstartsWith 'The': true\nendsWith 'dog': true\nreplace 'fox' with 'cat': The quick brown cat jumps over the lazy dog\nTemplate literal: Hello, my name is Alice and I am 25 years old.\nMultiline length: 27\ntrimmed: \"spaced\"\ntrimStart: \"spaced  \"\ntrimEnd: \"  spaced\"\ncharAt(0): T\ncharAt(4): S\ncharCodeAt(0): 84\nrepeat: hahaha\npadStart: 005\npadEnd: 500\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "console functions"
script = "console_functions.ts"
expected_stdout_pattern = "Testing console\\.log:\nHello, World!\nNumber: 42\nBoolean: true\nNull: null\nUndefined: undefined\nObject: \\{\"name\":\"test\",\"value\":123\\}\nArray: \\[1,2,3\\]\nMultiple arguments: string 42 true null\nTesting console\\.info:\nThis is an info message\nInfo with details: version 1\\.0\\.0\nTesting console\\.debug:\nThis is a debug message\nDebug data: \\{\"timestamp\":\"2024-01-01T00:00:00\\.000Z\"\\}\nTesting console\\.trace:\n    at default \\(file:///.+/console_functions\\.ts:34:13\\)\n    at <anonymous> \\(myco:main:8:1\\)\nThis is a trace message\n    at default \\(file:///.+/console_functions\\.ts:35:13\\)\n    at <anonymous> \\(myco:main:8:1\\)\nTrace from inside function\n    at testFunction \\(file:///.+/console_functions\\.ts:37:17\\)\n    at default \\(file:///.+/console_functions\\.ts:39:5\\)\n    at <anonymous> \\(myco:main:8:1\\)\n"
expected_stderr = "Testing console.error:\nThis is an error message\nError with number: 404\nTesting console.warn:\nThis is a warning message\nWarning with data: {\"level\":\"high\"}\nAssertion failed\nAssertion failed\nAssertion failed\nAssertion failed\nAssertion failed\nAssertion failed: Failed assertion with multiple arguments\n"
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "text encoding"
script = "text_encoding.ts"
expected_stdout = "Testing TextEncoder:\nEncoded basic string length: 13\nEncoded basic string type: Uint8Array\nEncoded UTF-8 string length: 19\nEncoded empty string length: 0\nTesting TextDecoder:\nDecoded basic string: Hello, World!\nBasic string round-trip success: true\nDecoded UTF-8 string: Hello, ä¸–ç•Œ! ðŸš€\nUTF-8 string round-trip success: true\nDecoded empty string: \nEmpty string round-trip success: true\nDecoded manual bytes: Hello\nTextEncoder/TextDecoder tests completed\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "argv basic"
script = "argv.ts"
expected_stdout_pattern = "Testing Myco\\.argv:\nargv is array: true\nargv length: 3\nFirst arg \\(program\\): .*/myco\nargv\\[0\\]: .*/myco\nargv\\[1\\]: run\nargv\\[2\\]: argv\\.ts\nNo custom arguments provided\nArgv test completed\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000

[[tests]]
name = "argv with custom arguments"
script = "argv.ts"
args = ["--test", "arg1", "arg2"]
expected_stdout_pattern = "Testing Myco\\.argv:\nargv is array: true\nargv length: 6\nFirst arg \\(program\\): .*/myco\nargv\\[0\\]: .*/myco\nargv\\[1\\]: run\nargv\\[2\\]: argv\\.ts\nargv\\[3\\]: --test\nargv\\[4\\]: arg1\nargv\\[5\\]: arg2\nCustom arguments found:\n  Custom arg 0: --test\n  Custom arg 1: arg1\n  Custom arg 2: arg2\nArgv test completed\n"
expected_stderr = ""
expected_exit_code = 0
timeout_ms = 5000 